{
  "version": 3,
  "sources": ["../../../src/validate/conditions.js"],
  "sourcesContent": ["/**\r\n * // Null Checking\r\n * is.not.null(value)               // value is not null or undefined\r\n * is.null(value)                   // value is null or undefined\r\n * \r\n * // Type Checking                 // value is not null and of the specified type\r\n * is.string(value)                 // value is a string\r\n * is.number(value)                 // value is a number\r\n * is.object(value)                 // value is an object\r\n * is.function(value)               // value is a function\r\n * is.array(value)                  // value is an array\r\n * is.boolean(value)                // value is a boolean\r\n * is.regexp(value)                 // value is a regular expression\r\n * is.date(value)                   // value is a date\r\n * is.instanceOf(value, constructor) // value is an instance of the constructor\r\n * is.symbol(value)                 // value is a symbol\r\n * is.type(value, type)             // value is of the specified type\r\n * \r\n * // Value Checking                // value is not null and of the specified type\r\n * is.equal(value, other)           // value is equal to other\r\n * is.not.equal(value, other)       // value is not equal to other\r\n * is.empty(value)                  // value is a string or an array and is empty\r\n * is.not.empty(value)              // value is a string or an array and is not empty\r\n * is.truthy(value)                 // value is truthy\r\n * is.falsy(value)                  // value is falsy\r\n * is.between(value, min, max)      // value is between min and max\r\n * is.not.between(value, min, max)  // value is not between min and max\r\n * is.greater(value, other)         // value is greater than other\r\n * is.less(value, other)            // value is not greater than other\r\n * is.oneOf(value, array)           // value is one of the elements in the array\r\n */\r\n\r\nconst is = {\r\n  null: (val) => val == null,\r\n  not: {\r\n    null: (val) => val != null\r\n  },\r\n  string: (val) => val != null && typeof val === 'string',\r\n  number: (val) => val != null && typeof val === 'number',\r\n  object: (val) => val != null && typeof val === 'object' && !Array.isArray(val),\r\n  function: (val) => val != null && typeof val === 'function',\r\n  array: (val) => Array.isArray(val),\r\n  boolean: (val) => val === true || val === false,\r\n  regexp: (val) => val instanceof RegExp,\r\n  date: (val) => val instanceof Date,\r\n  instanceOf: (val, ctor) => val instanceof ctor,\r\n  symbol: (val) => typeof val === 'symbol',\r\n  type: (val, type) => typeof val === type,\r\n  equal: (val, other) => val === other,\r\n  empty: (val) => (typeof val === 'string' || Array.isArray(val)) && val.length === 0,\r\n  true: (val) => val === true || val === \"true\",\r\n  false: (val) => val === false || val === \"false\",\r\n  between: (val, min, max) => val > min && val < max,\r\n  greater: (val, other) => val > other,\r\n  less: (val, other) => val < other,\r\n  oneOf: (val, arr) => arr.includes(val)\r\n};\r\n\r\n// Negated checks\r\nis.not.equal = (val, other) => !is.equal(val, other);\r\nis.not.empty = (val) => !is.empty(val);\r\nis.not.between = (val, min, max) => !is.between(val, min, max);\r\n\r\nglobalThis.is = is;\r\nexport { is };"],
  "mappings": "AAgCA,IAAMA,EAAK,CACT,KAAOC,GAAQA,GAAO,KACtB,IAAK,CACH,KAAOA,GAAQA,GAAO,IACxB,EACA,OAASA,GAAQA,GAAO,MAAQ,OAAOA,GAAQ,SAC/C,OAASA,GAAQA,GAAO,MAAQ,OAAOA,GAAQ,SAC/C,OAASA,GAAQA,GAAO,MAAQ,OAAOA,GAAQ,UAAY,CAAC,MAAM,QAAQA,CAAG,EAC7E,SAAWA,GAAQA,GAAO,MAAQ,OAAOA,GAAQ,WACjD,MAAQA,GAAQ,MAAM,QAAQA,CAAG,EACjC,QAAUA,GAAQA,IAAQ,IAAQA,IAAQ,GAC1C,OAASA,GAAQA,aAAe,OAChC,KAAOA,GAAQA,aAAe,KAC9B,WAAY,CAACA,EAAKC,IAASD,aAAeC,EAC1C,OAASD,GAAQ,OAAOA,GAAQ,SAChC,KAAM,CAACA,EAAKE,IAAS,OAAOF,IAAQE,EACpC,MAAO,CAACF,EAAKG,IAAUH,IAAQG,EAC/B,MAAQH,IAAS,OAAOA,GAAQ,UAAY,MAAM,QAAQA,CAAG,IAAMA,EAAI,SAAW,EAClF,KAAOA,GAAQA,IAAQ,IAAQA,IAAQ,OACvC,MAAQA,GAAQA,IAAQ,IAASA,IAAQ,QACzC,QAAS,CAACA,EAAKI,EAAKC,IAAQL,EAAMI,GAAOJ,EAAMK,EAC/C,QAAS,CAACL,EAAKG,IAAUH,EAAMG,EAC/B,KAAM,CAACH,EAAKG,IAAUH,EAAMG,EAC5B,MAAO,CAACH,EAAKM,IAAQA,EAAI,SAASN,CAAG,CACvC,EAGAD,EAAG,IAAI,MAAQ,CAACC,EAAKG,IAAU,CAACJ,EAAG,MAAMC,EAAKG,CAAK,EACnDJ,EAAG,IAAI,MAASC,GAAQ,CAACD,EAAG,MAAMC,CAAG,EACrCD,EAAG,IAAI,QAAU,CAACC,EAAKI,EAAKC,IAAQ,CAACN,EAAG,QAAQC,EAAKI,EAAKC,CAAG,EAE7D,WAAW,GAAKN",
  "names": ["is", "val", "ctor", "type", "other", "min", "max", "arr"]
}
