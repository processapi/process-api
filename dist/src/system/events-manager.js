var a=Object.defineProperty;var E=(i,e,t)=>e in i?a(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var h=(i,e)=>a(i,"name",{value:e,configurable:!0});var l=(i,e,t)=>(E(i,typeof e!="symbol"?e+"":e,t),t);var r=class{static is_mobile(){var e;return(e=globalThis.MOBILE_ENV)!=null&&e?!0:/Mobi/.test(navigator.userAgent)}};l(r,"name",Object.freeze("view_loader"));var f=Object.freeze({mousedown:"touchstart",mouseup:"touchend",mousemove:"touchmove",click:"touchend"}),c=class{constructor(){this.events=new Map}addEvent(e,t,s,n){this.events.has(e)||this.events.set(e,[]),this.events.get(e).push({type:t,listener:s,options:n}),e.addEventListener(t,s,n)}addPointerEvent(e,t,s,n){let o;r.is_mobile()?o=f[t]:o=t,this.addEvent(e,o,s,n)}addKeyboardEvent(e,t,s,n){this.addEvent(e,t,s,n)}addDoubleClickEvent(e,t,s){this.addEvent(e,"dblclick",t,s)}removeEvent(e,t,s,n){if(this.events.has(e)){let o=this.events.get(e),d=o.findIndex(v=>v.type===t&&v.listener===s&&v.options===n);d!==-1&&(o.splice(d,1),e.removeEventListener(t,s,n))}}clearEvents(){for(let[e,t]of this.events.entries())for(let{type:s,listener:n,options:o}of t)e.removeEventListener(s,n,o);this.events.clear()}dispose(){this.clearEvents()}};h(c,"EventsManager");export{c as EventsManager};
//# sourceMappingURL=events-manager.js.map
