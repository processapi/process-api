var h=Object.defineProperty;var c=(v,e)=>h(v,"name",{value:e,configurable:!0});import{SystemModule as r}from"../modules/system.js";const E=Object.freeze({mousedown:"touchstart",mouseup:"touchend",mousemove:"touchmove",click:"touchend"});class a{constructor(){this.events=new Map}addEvent(e,t,s,n){this.events.has(e)||this.events.set(e,[]),this.events.get(e).push({type:t,listener:s,options:n}),e.addEventListener(t,s,n)}addPointerEvent(e,t,s,n){let o;r.is_mobile()?o=E[t]:o=t,this.addEvent(e,o,s,n)}addKeyboardEvent(e,t,s,n){this.addEvent(e,t,s,n)}addDoubleClickEvent(e,t,s){this.addEvent(e,"dblclick",t,s)}removeEvent(e,t,s,n){if(this.events.has(e)){const o=this.events.get(e),d=o.findIndex(i=>i.type===t&&i.listener===s&&i.options===n);d!==-1&&(o.splice(d,1),e.removeEventListener(t,s,n))}}clearEvents(){for(const[e,t]of this.events.entries())for(const{type:s,listener:n,options:o}of t)e.removeEventListener(s,n,o);this.events.clear()}dispose(){this.clearEvents()}}c(a,"EventsManager");export{a as EventsManager};
//# sourceMappingURL=events-manager.js.map
