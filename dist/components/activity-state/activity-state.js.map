{
  "version": 3,
  "sources": ["../../../src/validate/validate-args.js", "../../../src/modules/component.js", "../../../components/activity-state/activity-state.js"],
  "sourcesContent": ["/**\r\n * @function validateArgs\r\n * @description This function is used by modules to validate arguments.\r\n * Are the arguments provided?\r\n * What argument properties are required?\r\n * What type should the argument be?\r\n * What is the default value for the argument?\r\n *\r\n * You only need to set the required property to true if the argument is required.\r\n * @param args {object} arguments to validate\r\n * @param def {object} definition of the arguments\r\n * @param prefix {string} prefix for the error message\r\n * @returns {void}\r\n *\r\n * @example\r\n * validateArgs(args, {\r\n *    view: { type: 'string', required: true },\r\n *    data: { type: 'object', default: {} },\r\n *    container: { type: 'HTMLElement', required: true }\r\n * });\r\n */\r\n\r\nexport function validateArgs(args, def, prefix = \"\") {\r\n\tif (!args) {\r\n\t\tthrow new Error(`${prefix}Arguments are required`.trim());\r\n\t}\r\n\r\n\tfor (const key in def) {\r\n\t\tconst arg = def[key];\r\n\t\tconst value = args[key];\r\n\r\n\t\tif (arg.required && value == null) {\r\n\t\t\tthrow new Error(`${prefix}Argument \"${key}\" is required`.trim());\r\n\t\t}\r\n\r\n\t\tif (value != null) {\r\n\t\t\tconst expectedType = arg.type.toLowerCase();\r\n\t\t\tconst actualType = typeof value === \"object\"\r\n\t\t\t\t? value.constructor?.name.toLowerCase()\r\n\t\t\t\t: typeof value;\r\n\r\n\t\t\tconst globalType = globalThis[arg.type ?? \"\"];\r\n\t\t\tif (actualType !== expectedType && !(globalType != null && value instanceof globalType)) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`${prefix}Argument \"${key}\" should be of type \"${arg.type}\"`.trim(),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (arg.default != null) {\r\n\t\t\targs[key] = arg.default;\r\n\t\t}\r\n\t}\r\n}\r\n", "import { validateArgs } from \"../validate/validate-args.js\";\n\n/**\n * @class ComponentModule\n * @description Helper class for working with web components.\n */\nclass ComponentModule {\n\t/**\n\t * @property name\n\t * @type {string}\n\t * @static\n\t * @description Name of the module\n\t */\n\tstatic name = Object.freeze(\"component\");\n\n\t/**\n\t * @method load_html\n\t * @param args {Object} - Arguments object\n\t * @param args.url {string} - URL of the component js file\n\t * @returns\n\t *\n\t * @example\n\t * await ComponentModule.load_html({ url: import.meta.url });\n\t *\n\t * @example\n\t * await api.call(\"component\", \"load_html\", { url: import.meta.url });\n\t */\n\tstatic async load_html(args) {\n\t\tvalidateArgs(args, {\n\t\t\turl: { type: \"string\", required: true },\n\t\t\thasCss: { type: \"boolean\", required: false },\n\t\t}, \"ComponentModule.load_html: \");\n\n\t\tconst { url, hasCss } = args;\n\t\tconst htmlPath = url.replace(\".js\", \".html\");\n\n\t\tlet html = await fetch(htmlPath).then((result) => result.text());\n\n\t\t// we assume that component has a css file.\n\t\t// set hasCss to false if component does not have a css file.\n\t\tif (hasCss !== false) {\n\t\t\tconst cssPath = url.replace(\".js\", \".css\");\n\t\t\thtml = `<link rel=\"stylesheet\" href=\"${cssPath}\">${html}`;\n\t\t}\n\n\t\treturn html;\n\t}\n\n\tstatic async load_component(args) {\n\t\tvalidateArgs(args, {\n\t\t\telement: { type: \"HTMLElement\", required: true },\n\t\t\turl: { type: \"string\", required: true },\n\t\t}, \"ComponentModule.load_component: \");\n\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tconst { element, url } = args;\n\n\t\t\tComponentModule.load_html({ url }).then((html) => {\n\t\t\t\telement.shadowRoot.innerHTML = html;\n\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\tComponentModule.ready({ element });\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tawait promise;\n\t}\n\n\t/**\n\t * @method ready\n\t * @description Set the ready attribute to true on an element.\n\t * @param args {Object} - Arguments object\n\t * @param args.element {HTMLElement} - Element to set the ready attribute on\n\t *\n\t * @example\n\t * await ComponentModule.ready({ element: document.querySelector(\"my-component\") });\n\t * @returns {Promise<void>}\n\t */\n\tstatic async ready(args){\n\t\tvalidateArgs(args, {\n\t\t\telement: { type: \"HTMLElement\", required: true },\n\t\t}, \"ComponentModule.ready: \");\n\n\t\tconst { element } = args;\n\n\t\telement.dataset.ready = \"true\";\n\t\telement.dispatchEvent(new CustomEvent(\"ready\"));\n\t}\n\n\t/**\n\t * @method on_ready\n\t * @description Wait for an element to be ready.\n\t * @param args {{callback: *, element: Element}} - Arguments object\n\t * @param args.element {HTMLElement} - Element to wait for\n\t * @param args.callback {function} - Callback to call when element is ready\n\t * @returns {Promise<void>}\n\t *\n\t * @example\n\t * await ComponentModule.on_ready({\n\t *    element: document.querySelector(\"my-component\"),\n\t *    callback: () => {\n\t *    \tconsole.log(\"Component is ready\");\n\t *    }\n\t * });\n\t */\n\tstatic async on_ready(args) {\n\t\tvalidateArgs(args, {\n\t\t\telement: { type: \"HTMLElement\", required: true },\n\t\t\tcallback: { type: \"function\", required: true },\n\t\t}, \"ComponentModule.on_ready: \");\n\n\t\tconst { element, callback } = args;\n\n\t\tif (element.dataset.ready === \"true\") {\n\t\t\tcallback();\n\t\t}\n\t\telse {\n\t\t\telement.addEventListener(\"ready\", callback);\n\t\t}\n\t}\n\n\t/**\n\t * @method filter_ul\n\t * @description Filter a list of items in an unordered list.\n\t * Given a text, look at the text content or given attribute to check if a list item should be visible.\n\t * The list items that should be visible, the hidden attribute is absent.\n\t * When the list item should NOT be visible, the hidden attribute is present.\n\t * Set the hidden attribute on the stylesheet to be display: none.\n\t * @param args {Object} - Arguments object\n\t * @param args.text {string} - Text to filter by\n\t * @param args.attribute {string | null} - Attribute to filter - if attribute should be checked with the text to filter by.\n\t * @returns {Promise<void>}\n\t */\n\tstatic async filter_ul(args) {\n\t\tconst { text, attribute, listElement } = args;\n\t\tconst items = listElement.querySelectorAll(\"li\");\n\n\t\titems.forEach((item) => {\n\t\t\tconst content = item.textContent;\n\t\t\tconst attr = item.getAttribute(attribute);\n\n\t\t\tif (content.includes(text) || (attr?.includes(text))) {\n\t\t\t\titem.removeAttribute(\"hidden\");\n\t\t\t} else {\n\t\t\t\titem.setAttribute(\"hidden\", \"hidden\");\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport { ComponentModule };\n", "import { ComponentModule } from \"../../src/modules/component.js\";\r\n\r\nclass ActivityState extends HTMLElement {\r\n    static name = Object.freeze(\"activity-state\");\r\n\r\n    #state;\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: \"open\" });\r\n        this.style.display = \"none\";\r\n    }\r\n\r\n    async connectedCallback() {\r\n        this.shadowRoot.innerHTML = await ComponentModule.load_html({\r\n            url: import.meta.url,\r\n        });\r\n\r\n        requestAnimationFrame(() => {\r\n            if (this.#state) {\r\n                this.setState(this.#state);\r\n            }\r\n            this.style.display = \"block\";\r\n        });\r\n    }\r\n\r\n    setState(state) {\r\n        const materialIcon = this.shadowRoot.querySelector(\"material-icon\");\r\n\r\n        if (materialIcon == null) {\r\n            this.#state = state;\r\n            return;\r\n        }\r\n\r\n        const iconName = {\r\n            \"busy\"      : \"progress_activity\",\r\n            \"success\"   : \"check\",\r\n            \"error\"     : \"error_outline\",\r\n        }[state];\r\n\r\n        ComponentModule.on_ready({\r\n            element: materialIcon,\r\n            callback: () => {\r\n                materialIcon.setIcon(iconName);\r\n                materialIcon.classList.remove(\"success\", \"error\", \"rotate\");\r\n\r\n                if (state === \"busy\") {\r\n                    materialIcon.classList.add(\"rotate\");\r\n                } else if (state === \"success\") {\r\n                    materialIcon.classList.add(\"success\");\r\n                } else if (state === \"error\") {\r\n                    materialIcon.classList.add(\"error\");\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ncustomElements.define(ActivityState.name, ActivityState);\r\n"],
  "mappings": "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",
  "names": ["validateArgs", "args", "def", "prefix", "key", "arg", "value", "expectedType", "actualType", "globalType", "__name", "_ComponentModule", "args", "validateArgs", "url", "hasCss", "htmlPath", "html", "result", "resolve", "element", "callback", "text", "attribute", "listElement", "item", "content", "attr", "ComponentModule", "__publicField", "_state", "ActivityState", "__privateAdd", "ComponentModule", "__privateGet", "state", "materialIcon", "__privateSet", "iconName", "__publicField"]
}
